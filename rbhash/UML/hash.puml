@startuml hash.puml

skinparam class {
	BackgroundColor WhiteSmoke
	ArrowColor Grey
	BorderColor DarkOrange
}
hide class circle

class Item < Data > {
  {field} - _key : double
  {field} - _data : Data

  + Item(double k)
  + Item(double k, Data d)
  + setKey(double k)
  + getKey() : double
  + setData(Data &data)
  + getData() : Data
}

class GenericNode < Data > {
  + GenericNode()
  + GenericNode(double &k)
  + GenericNode(double &k, D &d)
  + ~GenericNode()
  + toString() : string
  + <<friend>> operator<<(ostream &Str, GenericNode &c) : ostream& 
  + <<friend>> operator<<(ostream &Str, GenericNode *c) :  ostream& 
}

enum state {
  + EMPTY
  + OCCUPIED
  + DELETED
}

class HashTable < Data, HF >{
  {field} - *_S : vector<state>
  {field} - *_T : vector<GenericNode*>
  {field} - _h1 : int
  {field} - _h2 : int
  {field} - _m : int
  {field} - _occ : int
  + HashTable( int size)
  + ~HashTable()
  + getSize() : int 
  + getQuantity() : int 
  + getState(int i) : state 
  + getNode(int i) : GenericNode* 
  + insert(double &k, D &d) : int 
  + search(double &k) : int
  + search(int &j) :  D
  + remove(double &k) : int
  + <<friend>> operator<<(ostream &Str, HashTable *c) : ostream& 
}


Item <|-up- GenericNode
GenericNode --* HashTable
state --* HashTable

@enduml